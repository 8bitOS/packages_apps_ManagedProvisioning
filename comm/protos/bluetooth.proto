/*
 * Copyright (C) 2015 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto2";

package bluetooth;

option java_package = "com.android.managedprovisioning.comm";
option optimize_for = LITE_RUNTIME;

// Provisioning status updates
message StatusUpdate {
  optional int32 status_code = 1;
  optional string custom_data = 2;
}

// Information about the connecting device
message DeviceInfo {
  optional int32 api_version = 1;
  optional string make = 2;
  optional string model = 3;
  optional string serial = 4;
  optional string fingerprint = 5;
  optional int64 totalMemory = 6;
  optional int32 screenWidthPx = 7;
  optional int32 screenHeightPx = 8;
  optional float screenDensity = 9;
}

// Holds network data transferred over Bluetooth.
message NetworkData {
  enum Status {
    OK = 1; // Data is valid.
    EOF = 2; // End of file reached.
    SHUTDOWN = 3; // Connection ending; shut down all threads
  }
  optional int32 connection_id = 1;
  optional Status status = 2 [default = OK];
  optional bytes data = 3;
}

// Data packet sent and received over Bluetooth. The deviceIdentifier should
// always be set when sending a request. Only one of the other packets should
// be set.
message CommPacket {
  optional string deviceIdentifier = 1;
  optional StatusUpdate status_update = 2;
  optional NetworkData network_data = 3;
  optional DeviceInfo  device_info = 4;
}
